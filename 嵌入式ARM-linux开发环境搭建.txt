一、安装ARM交叉编译链
http://www.arm9.net/download.asp     //友善之臂下载地址或者使用百问网提供的
解压到/home/asfd/opt目录         注意：不需要配置环境变量
当出现不能正常运行时，是因为64位的系统缺少32位的库导致的。
解决办法：
    sudo apt-get update
    sudo apt-get install lib32z1
以此种方法可以放置几种不同版本的交叉编译工具链。

二、安装arm-linux-gdb
前提：  sudo apt-get install texinfo
	sudo apt-get install libncurses5-dev 
	sudo apt-get install m4
	sudo apt-get install flex
	sudo apt-get install biso
下载地址：http://ftp.gnu.org/gnu/gdb/（可下载最新版本）
1)解压到/home/asfd/opt目录
2)./configure --target=arm-linux --prefix=/home/asfd/tools -v
   target指明编译生成的GDB用于调试ARM-LINUX程序,prefix指明安装目录
3)make
4)sudo make install      注意：不需要配置环境变量

三、安装jdk
1、可以选择安装openjdk
sudo apt-get -y install default-jdk
2、选择安装sun jdk
（下载地址 http://www.oracle.com/technetwork/java/javase/downloads/index.html）
1)解压到/home/asfd/opt目录
2）配置环境变量：sudo gedit /etc/profile
加入PATH路径：
	export JDK_HOME=/home/asfd/opt/jdk-9.0.4
	export JRE_HOME=/home/asfd/opt/jre-9.0.4
	export PATH=$PATH:$JDK_HOME/bin:$JRE_HOME/bin
	export CLASSPATH=$JDK_HOME/lib:$JRE_HOME/lib
source /etc/profile          重载环境变量
sudo update-alternatives --install /usr/bin/java java /usr/lib/java/jre-9.0.4/bin/java 300
sudo update-alternatives --config java  （只有一个java就不会让选择）
java -version 验证是否安装成功

四、安装eclipse
下载地址：https://github.com/gnu-mcu-eclipse/org.eclipse.epp.packages/releases
氧气表示最新版本，并且此版本自带插件。
1)解压到/home/asfd/opt目录
2）创建快捷方式sudo gedit /usr/share/applications/eclipse.desktop
内容如下：      
	[Desktop Entry]
	Name=eclipse
	Comment=eclipse
	Exec=home/asfd/eclipse
	Icon=/home/asfd/opt/eclipse/icon.xpm
	Terminal=false
	Type=Application
	StartupNotify=true 
3)由于没有菜单需在/home/asfd/下创建名为eclipse的脚本
内容为：
	#!/bin/bash
	export UBUNTU_MENUPROXY=0
	/home/asfd/opt/eclipse/eclipse     (明确可执行文件)

五、安装openocd
下载地址：https://github.com/gnu-mcu-eclipse/openocd/releases
1)解压到/home/asfd/opt目录
2)拷贝udev文件
sudo cp ~/opt/gnu-mcu-eclipse/openocd/0.10.0-7-20180123-1217/contrib/60-openocd.rules /etc/udev/rules.d
重新加载规则：sudo udevadm control --reload-rules
3)让所有用户以sudo启动openocd
sudo usermod -aG plugdev $USER
4）在openocd的bin目录下创建openocd.cfg文件
内容如下：
开始/
interface ftdi
ftdi_device_desc "USB<=>JTAG&RS232"
ftdi_vid_pid 0x1457 0x5118

ftdi_layout_init 0x0f08 0x0f1b
ftdi_layout_signal nSRST -data 0x0200 -noe 0x0800
ftdi_layout_signal nTRST -data 0x0100 -noe 0x0400

# Target configuration for the Samsung 2440 system on chip
# Tested on a S3C2440 Evaluation board by keesj
# Processor       : ARM920Tid(wb) rev 0 (v4l)
# Info:   JTAG tap: s3c2440.cpu tap/device found: 0x0032409d (Manufacturer: 0x04e, Part: 0x0324, Version: 0x0)

if { [info exists CHIPNAME] } {
   set _CHIPNAME $CHIPNAME
} else {
   set _CHIPNAME s3c2440
}

if { [info exists ENDIAN] } {
   set _ENDIAN $ENDIAN
} else {
  # this defaults to a bigendian
   set _ENDIAN little
}

if { [info exists CPUTAPID] } {
   set _CPUTAPID $CPUTAPID
} else {
   set _CPUTAPID 0x0032409d
}

#jtag scan chain
jtag newtap $_CHIPNAME cpu -irlen 4 -ircapture 0x1 -irmask 0x0f -expected-id $_CPUTAPID

adapter_khz 1234

set _TARGETNAME $_CHIPNAME.cpu
target create $_TARGETNAME arm920t -endian $_ENDIAN -chain-position $_TARGETNAME

$_TARGETNAME configure -work-area-phys 0x200000 -work-area-size 0x4000 -work-area-backup 1

#reset configuration
reset_config trst_and_srst

#Flash CFG<openocd.pdf P[74~]  
#flash bank name driver base size chip_width bus_width target [driver_options]  
#usage: flash bank <name> <driver> <base> <size> <chip_width> <bus_width> <target>  
#flash bank bank_id driver_name base_address size_bytes chip_width_bytes bus_width_bytes target [driver_options ...]  
flash bank 0 cfi 0x0 0x200000 2 2 $_TARGETNAME  
  
#NAND CFG <openocd.pdf P[88~92]>  
#nand device name driver target [ configparams... ]  
nand device 0 s3c2440 $_TARGETNAME
结束/
此配置文件针对百问网的jz2440开发板。
注意：不需要配置环境变量

上述方法是使用编译好的openocd，若需要自己编译，步骤如下：
git clone git://openocd.git.sourceforge.net/gitroot/openocd/openocd
sudo apt-get upgrade(可选)
//一些依赖的安装
sudo apt-get install libusb-1.0-0-dev
sudo apt-get install libftdi-dev
sudo apt-get install libtool
sudo apt-get install automake
sudo apt-get install libhidapi-dev
	sudo apt-get install libusb++-dev
	sudo dpkg --get-selections 用该命令列出安装了哪些包，在用下面的命令删除
	sudo apt-get --purge remove libusb++-dev    //卸载软件可用该命令
sudo ./bootstrap
sudo ./configure --enable-ftdi --enable-openjtag --enable-cmsis-dap
sudo make
sudo make install
cd contrib/
sudo cp  60-openocd.rules /etc/udev/rules.d/
